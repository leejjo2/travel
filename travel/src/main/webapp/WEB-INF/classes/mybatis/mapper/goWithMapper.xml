<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goWith">
	<!-- 도시 이름 출력 -->
	<select id="listCity" resultType="com.sp.trip.goWith.GoWith">
		SELECT cityNum, cityName FROM goWithCity
	</select>
	<!-- 관광지 이름 출력 -->
	<select id="listSpot" parameterType="Integer" resultType="com.sp.trip.goWith.GoWith">
		SELECT spotNum, spotName, cityNum FROM goWithSpot WHERE cityNum = #{cityNum} ORDER BY cityNum
	</select>
	<!-- 게시물 insert -->
	<insert id="insertGoWith" parameterType="com.sp.trip.goWith.GoWith">
		INSERT INTO goWith(goWithNum, userId, pwd, subject, content, hitCount, reg_date, recruit_status, recruit_cnt, startDate, endDate, age, gender, discussion, drink, cigar, tripType1, tripType2, tripType3, imageFilename, spotNum)
		VALUES (goWith_seq.NEXTVAL, #{userId}, #{pwd}, #{subject}, #{content}, 0, SYSDATE, #{recruit_status}, #{recruit_cnt}, #{startDate}, #{endDate}, #{age}, #{gender}, #{discussion}, #{drink}, #{cigar}, #{tripType1}, #{tripType2}, #{tripType3}, #{imageFilename}, #{spotNum})
	</insert>
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(subject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'everything' ">
				( spotNum = #{keyword} AND startAge = #{keyword} AND endAge = #{keyword} AND gender = #{keyword}
		          AND startDate = #{keyword} AND endDate = #{keyword} AND discussion = #{keyword})
			</when>
			<when test="condition == 'subject' ">
				( INSTR(subject, #{keyword}) &gt; 0)
			</when>
			<when test="condition == 'userName' ">
				( INSTR(userName, #{keyword}) &gt; 0)
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
			
	<!-- 글개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM goWith
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="recruit_status!=null and recruit_status!='' ">
				AND recruit_status = #{recruit_status}
			</if>
			<if test="spotNum!=null and spotNum!=0">
				AND spotNum = #{spotNum}
			</if>
		</where>   
	</select>
	
	<!-- 글리스트 -->
	<select id="listGoWith" parameterType="map" resultType="com.sp.trip.goWith.GoWith">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT g.goWithNum, g.userId, userName, subject, cityName, spotName, 
				recruit_cnt, recruit_status, TO_CHAR(startDate, 'YYYY-MM-DD') startDate,
				TO_CHAR(endDate, 'YYYY-MM-DD') endDate, age, gender, discussion, drink, cigar,
				tripType1, tripType2, tripType3,
				TO_CHAR(g.reg_date, 'YYYY-MM-DD') reg_date,
				hitCount, imageFilename, NVL(replyCount, 0) replyCount
				FROM goWith g
				JOIN member m ON g.userId=m.userId
                JOIN goWithSpot s ON g.spotNum = s.spotNum
                JOIN goWithCity c ON s.cityNum = c.cityNum
				LEFT OUTER JOIN (
					SELECT goWithNum, COUNT(*) replyCount FROM goWithReply
					GROUP BY goWithNum
				) a ON g.goWithNum = a.goWithnum
				<where>
					<if test="keyword != null and keyword != ''">
						<include refid="where-list"/>
					</if>
					<if test="recruit_status!=null and recruit_status!='' ">
						AND recruit_status = #{recruit_status}
					</if>
				</where>
				ORDER BY goWithNum DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}	
	</select>
	
	<!-- 글보기 -->
	<select id="readGoWith" parameterType="Integer" resultType="com.sp.trip.goWith.GoWith">
		SELECT g.goWithNum, g.userId, userName, subject, g.spotNum, s.cityNum, cityName, spotName, content,
				recruit_cnt, recruit_status, TO_CHAR(startDate, 'YYYY-MM-DD') startDate,
				TO_CHAR(endDate, 'YYYY-MM-DD') endDate, age, gender, discussion, drink, cigar,
				tripType1, tripType2, tripType3,
				TO_CHAR(g.reg_date, 'YYYY-MM-DD') reg_date,
				hitCount, imageFilename
				FROM goWith g
				JOIN member m ON g.userId=m.userId
                JOIN goWithSpot s ON g.spotNum = s.spotNum
                JOIN goWithCity c ON s.cityNum = c.cityNum
				WHERE g.goWithNum = #{goWithNum}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE goWith SET hitCount=hitCount+1 WHERE goWithNum = #{goWithNum}
	</update>
	
	<!-- 수정 -->
	<update id="updateGoWith" parameterType="com.sp.trip.goWith.GoWith">
		UPDATE GoWith SET subject=#{subject}, content=#{content}, recruit_status=#{recruit_status} , recruit_cnt=#{recruit_cnt}, 
				startDate=#{startDate}, endDate=#{endDate}, age=#{age}, gender=#{gender}, 
				discussion=#{discussion}, drink=#{drink}, cigar=#{cigar}, tripType1=#{tripType1}, tripType2=#{tripType2}, 
				tripType3=#{tripType3}, imageFilename=#{imageFilename, jdbcType=VARCHAR}, spotNum=#{spotNum}
		WHERE goWithNum = #{goWithNum}
	</update>
      
	<!-- 삭제 -->
	<delete id="deleteGoWith" parameterType="Integer">
		DELETE FROM goWith WHERE goWithNum = #{goWithNum}
	</delete>

	<!-- 댓글 -->
	<insert id="insertReply" parameterType="com.sp.trip.goWith.Reply">
		INSERT INTO goWithReply(goWithReplyNum, goWithNum, userId, pwd, content, reg_date)
		VALUES (goWithReply_seq.NEXTVAL, #{goWithNum}, #{userId}, #{pwd}, #{content}, SYSDATE)
	</insert>

	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM goWithReply
		WHERE goWithNum=#{goWithNum}
	</select>

	<!-- 댓글리스트 -->
	<select id="listReply" parameterType="map" resultType="com.sp.trip.goWith.Reply">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT goWithReplyNum, r.userId, userName, r.goWithNum, r.content, r.reg_date
				FROM goWithReply r
				JOIN member m ON r.userId = m.userId
				JOIN goWith g ON r.goWithNum = g.goWithNum
				WHERE r.goWithNum = #{goWithNum}  
				ORDER BY goWithReplyNum DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="map">
		DELETE FROM goWithReply
		WHERE goWithReplyNum = #{goWithReplyNum}	
	</delete>
</mapper>