<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="travelCourse">
	<!-- 게시물 시퀀스 -->
	<select id="travelCourseSeq" resultType="Integer">
		SELECT travelCourse_seq.NEXTVAL FROM dual
	</select>
	<!-- 게시물 insert -->
	<insert id="insertBoard" parameterType="com.sp.trip.travelCourse.TravelCourse">
		INSERT INTO travelCourse(courseNum, userID, subject, content, cityNum, themeNum, period )
		VALUES (#{courseNum}, #{userId}, #{subject}, #{content}, #{cityNum}, #{themeNum}, #{period})
	</insert>
	
	<!-- 상세경로 시퀀스 -->
	<select id="travelCourseDetailSeq" resultType="Integer">
		SELECT travelCourseDetail_seq.NEXTVAL FROM dual
	</select>
	<!-- 게시물 상세 경로 insert -->
	<insert id="insertCourse" parameterType="com.sp.trip.travelCourse.TravelCourse">
		INSERT INTO travelCourseDetail (courseDetailNum, courseNum, course_seq, placeName, address, longitude, latitude, content)
  		VALUES (#{courseDetailNum}, #{courseNum} , #{courseSeq}, #{placeName}, #{address}, #{longitude}, #{latitude}, #{detailContent})
	</insert>
	<!-- 상세경로 이미지 insert -->
	<insert id="travelcourseImage" parameterType="com.sp.trip.travelCourse.TravelCourse">
		INSERT INTO travelcourseImage (imageFileNum, travelCourseNum, saveFileName)
		VALUES (travelcourseImage_seq.NEXTVAL, #{courseDetailNum}, #{saveFileName})
	</insert>
	
	<!-- 도시 카테고리 -->
	<select id="cityCategory" resultType="com.sp.trip.travelCourse.TravelCourse">
		SELECT cityNum cityNum, cityName cityName
		FROM city
		ORDER BY cityNum
	</select>
	<!-- 도시 이름 select -->
	<select id="cityNameSearch" parameterType="Integer" resultType="com.sp.trip.travelCourse.TravelCourse">
		select cityName from city where cityNum = #{cityNum}
	</select> 
	
	<!-- 테마 카테고리 -->
	<select id="themeCategory" resultType="com.sp.trip.travelCourse.TravelCourse">
		SELECT themeNum, themeName 
		FROM theme
		ORDER BY themeNum
	</select> 
	
	<!-- 테마 이름 select -->
	<select id="themeNameSearch" parameterType="Integer" resultType="com.sp.trip.travelCourse.TravelCourse">
		select themeName from theme where themeNum = #{themeNum}
	</select>

	<!-- list select -->
	<select id="listBoard" parameterType="map" resultType="com.sp.trip.travelCourse.TravelCourse">
       SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        select a.courseNum, a.userId, c.cityNum, c.cityName, t.themeNum, t.themeName, period, subject, a.reg_date, hitCount, courseDetailNum
		        from travelCourse a
		        JOIN member m ON a.userId=m.userId
				JOIN travelCourseDetail d ON  a.courseNum = d.courseNum
				JOIN city c ON a.cityNum = c.cityNum
				JOIN theme t ON a.themeNum = t.themeNum
				<where>
					<if test="keyword != null and keyword != ''">
						&#40; INSTR( c.cityName, #{keyword}) &gt; 0 OR  INSTR( period, #{keyword}) &gt; 0 OR  INSTR( subject, #{keyword}) &gt; 0 &#41;
						AND
					</if>
					<if test="themeNum != 0 ">
						a.themeNum = #{themeNum} AND course_seq = 1 
					</if>
					<if test="themeNum == 0  ">
						course_seq = 1 
					</if>
				</where>
				

  		 	ORDER BY a.reg_date DESC 
		    ) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<!-- 리스트 개수 -->
	<select id="dataCount" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM travelCourse a
		JOIN member m ON a.userId=m.userId
		JOIN city c ON a.cityNum = c.cityNum
		<where>
			<if test="keyword != null and keyword != ''">
				&#40; INSTR( c.cityName, #{keyword}) &gt; 0 OR  INSTR( period, #{keyword}) &gt; 0 OR  INSTR( subject, #{keyword}) &gt; 0 &#41;
				AND
			</if>
			<if test="themeNum != 0 ">
				a.themeNum = #{themeNum} 
			</if>

		</where>
	</select>
	
	
	<!-- 상세코스 select -->
	<select id="listCourse" parameterType="Integer"  resultType="com.sp.trip.travelCourse.TravelCourse">
		select a.courseNum, placeName, course_seq courseSeq, courseDetailNum, address, longitude, latitude, saveFilename , a.content detailContent
		from travelCourseDetail a
		JOIN travelCourse b ON  a.courseNum = b.courseNum
		JOIN travelcourseImage c ON  c.travelCourseNum = a.courseDetailNum
		WHERE a.courseNum = #{courseNum}
        ORDER BY courseSeq ASC
	</select>
	
	<!-- 리스트 메인 이미지 select -->
	<select id="listImg" parameterType="Integer"  resultType="String">
	    select saveFilename
		from travelcourseImage a
		JOIN travelCourseDetail b ON  a.travelCourseNum = b.courseDetailNum
		WHERE course_seq = 1 AND  a.travelCourseNum = #{courseDetailNum}
	</select>
	
	
	<!-- 조회수 -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE travelCourse SET hitCount=hitCount+1 WHERE courseNum = #{courseNum}
	</update>


	<!-- 게시 글 좋아요 추가 -->
	<insert id="insertBoardLike" parameterType="map">
		INSERT INTO travelCourseLike(courseNum, userId) VALUES (#{courseNum}, #{userId})
	</insert>

	<!-- 게시 글 좋아요 삭제 -->
	<delete id="deleteBoardLike" parameterType="map">
		DELETE FROM travelCourseLike WHERE courseNum = #{courseNum} AND userId = #{userId}
	</delete>
	
	<!-- 게시글 좋아요 개수 -->
	<select id="boardLikeCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM travelCourseLike
		WHERE courseNum = #{courseNum}
	</select>
	
	<!-- 게시글 좋아요 여부 -->
	<select id="userBoardLiked" parameterType="map" resultType="com.sp.trip.travelCourse.TravelCourse">
		SELECT courseNum, userId FROM travelCourseLike WHERE courseNum = #{courseNum} AND userId = #{userId}
	</select>
	
	
	<!-- 게시글 스크랩 추가 -->
	<insert id="insertBoardScrap" parameterType="map">
		INSERT INTO scrap(scrapNum, userId, scrapSection, scrapSectionNum) VALUES ( scrap_seq.NEXTVAL, #{userId}, 1, #{courseNum})
	</insert>

	<!-- 게시글 스크랩 삭제 -->
	<delete id="deleteBoardScrap" parameterType="map">
		DELETE FROM scrap WHERE scrapSectionNum = #{courseNum} AND userId = #{userId}
	</delete>
	
	
	
	<!-- 게시글 스크랩 개수 -->
	<select id="boardScrapCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM scrap
		WHERE scrapSection = 1 AND scrapSectionNum = #{courseNum}
	</select>
	
	<!-- 게시글 스크랩 여부 -->
	<select id="userBoardScraped" parameterType="map" resultType="com.sp.trip.travelCourse.TravelCourse">
		SELECT scrapSectionNum, userId FROM scrap WHERE scrapSectionNum = #{courseNum} AND userId = #{userId}
	</select>


	<select id="readBoard" parameterType="Integer" resultType="com.sp.trip.travelCourse.TravelCourse">
	 SELECT a.courseNum, a.userId, userName, subject, content, 
				hitCount, a.cityNum, cityName, a.themeNum, themeName,
				period, TO_CHAR(a.reg_date, 'yyyy-mm-dd') as reg_date
	      FROM travelCourse a
			JOIN member m ON a.userId = m.userId
			JOIN city c ON a.cityNum = c.cityNum
			JOIN theme t ON a.themeNum = t.themeNum
	      WHERE a.courseNum = #{courseNum}
   	</select>
</mapper>